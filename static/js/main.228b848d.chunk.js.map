{"version":3,"sources":["utils/history.js","actions/actionTypes.js","actions/action.js","components/ListItem.js","components/Body.js","utils/FetchData.js","components/Search.js","components/App.js","components/ErrorPage.js","serviceWorker.js","store/initialState.js","reducers/rootReducer.js","reducers/movieReducer.js","components/MovieBanner.js","components/DisplayMovieDetails.js","index.js"],"names":["createBrowserHistory","ACTION","ADD_MOVIE_TO_MOVIE_DATA","CLEAR_MOVIE_DATA","ADD_MOVIE_BANNER_DATA","ADD_MOVIE_TO_MOVIE_DATA_GENRE","SET_SEARCH","SET_DISPLAY_MESSAGE","addMovieToMovieData","movieDetails","type","payload","clearMovieData","addMovieBannerData","value","addMovieBannerDataGenre","setSearch","setDisplayMessage","ListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setMovieBanner","bind","assertThisInitialized","history","push","movieData","id","data","react_default","a","createElement","Fragment","className","title","src","poster_path","alt","release_date","vote_average","overview","genres","join","onClick","data-toggle","data-target","Component","connect","dispatch","bindActionCreators","Body","movieReducer","moviesData","areMoviesFound","displayMessage","i","map","movie","key","Math","random","components_ListItem","state","fetchData","searchString","arguments","length","undefined","url","Promise","resolve","reject","req","XMLHttpRequest","open","onload","status","JSON","parse","response","Error","statusText","onerror","send","Search","isByMovieName","isByRating","handleChange","handleSubmit","handleSearchByMovie","handleSearchByGenre","handleSortByRating","handleSortByReleaseDate","enterCheck","e","preventDefault","setState","event","target","toLowerCase","_this2","buildUrl","getData","then","jsonData","d","keyCode","document","getElementById","click","onSubmit","onChange","onKeyDown","placeholder","totalNumberOfMoviesFound","App","components_Search","components_Body","ErrorPage","console","log","Link","to","Boolean","window","location","hostname","match","initialState","showSearch","movieBannerData","allReducers","combineReducers","action","objectSpread","MovieBanner","isEmpty","obj","hasOwnProperty","convertMinsToHrsMins","mins","h","floor","m","concat","individualMovieData","tagline","split","runtime","DisplayMovieDetails","components_MovieBanner","genre","params","getGenreData","store","createStore","ReactDOM","render","es","Router","Switch","Route","path","component","exact","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.228b848d.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","const ACTION = {\r\n    ADD_MOVIE_TO_MOVIE_DATA : \"ADD_MOVIE_TO_MOVIE_DATA\",\r\n    CLEAR_MOVIE_DATA : \"CLEAR_MOVIE_DATA\",\r\n    ADD_MOVIE_BANNER_DATA : \"ADD_MOVIE_BANNER_DATA\",\r\n    ADD_MOVIE_TO_MOVIE_DATA_GENRE : \"ADD_MOVIE_TO_MOVIE_DATA_GENRE\",\r\n    SET_SEARCH : \"SET_SEARCH\",\r\n    SET_DISPLAY_MESSAGE:\"SET_DISPLAY_MESSAGE\"\r\n}\r\n\r\nexport default ACTION;\r\n","import ACTION from \"./actionTypes\"\r\n\r\nexport const addMovieToMovieData = (movieDetails) => {\r\n    return {\r\n        type: ACTION.ADD_MOVIE_TO_MOVIE_DATA,\r\n        payload: movieDetails\r\n    }\r\n};\r\n\r\nexport const clearMovieData = () => {\r\n    return {\r\n        type: ACTION.CLEAR_MOVIE_DATA,\r\n        payload: []\r\n    }\r\n};\r\n\r\nexport const addMovieBannerData = (value) => {\r\n    return {\r\n        type: ACTION.ADD_MOVIE_BANNER_DATA,\r\n        payload: value\r\n    }\r\n};\r\n\r\nexport const addMovieBannerDataGenre = (movieDetails) => {\r\n    return {\r\n        type: ACTION.ADD_MOVIE_TO_MOVIE_DATA_GENRE,\r\n        payload: movieDetails\r\n    }\r\n};\r\n\r\nexport const setSearch = (value) => {\r\n    return {\r\n        type: ACTION.SET_SEARCH,\r\n        payload: value\r\n    }\r\n};\r\n\r\nexport const setDisplayMessage = (value) => {\r\n    return {\r\n        type: ACTION.SET_DISPLAY_MESSAGE,\r\n        payload: value\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nimport '../css/App.css';\r\n\r\nimport history from '../utils/history';\r\nimport {addMovieBannerDataGenre,addMovieBannerData,clearMovieData,setSearch} from \"../actions/action\"\r\n\r\nclass ListItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setMovieBanner = this.setMovieBanner.bind(this);\r\n    }\r\n\r\n\r\n    setMovieBanner() {\r\n        history.push('/displayMovieDetails/'+this.props.movieData.id);\r\n    }\r\n\r\n\r\n    render() {\r\n    \tconst data = this.props.movieData;\r\n        return (\r\n            <>\r\n                <div className=\"col-sm-4 text-center\">\r\n                    <div className=\"panel panel-primary\">\r\n                    <div className=\"panel-heading\"><strong><h4>{data.title}</h4></strong></div>\r\n                        <div className=\"panel-body\">\r\n                            <img src={data.poster_path} alt={data.title} className=\"movieBanner\" />\r\n                        </div> \r\n                        <div className=\"panel-footer text-left\">      \r\n                            <h5>Released on: {data.release_date}</h5>\r\n                            <h5>Rating: {data.vote_average}</h5>\r\n                            <p id=\"overview\">{data.overview} </p>\r\n                            <h5> Genre: {data.genres.join(\", \")}</h5>\r\n                            <center><button type=\"button\" onClick={this.setMovieBanner} className=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"  >Description</button></center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        addMovieBannerDataGenre: addMovieBannerDataGenre,\r\n        addMovieBannerData:addMovieBannerData,\r\n        clearMovieData:clearMovieData,\r\n        setSearch:setSearch\r\n    }, dispatch);\r\n  }\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(ListItem);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ListItem from \"./ListItem\"\r\n\r\nimport '../css/App.css';\r\nimport '../css/Body.css';\r\n\r\n\r\n\r\n\r\nclass Body extends Component {\r\n    render() {\r\n        const data = this.props.movieReducer.moviesData;\r\n        if(!this.props.movieReducer.areMoviesFound ) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <h1>{this.props.movieReducer.displayMessage}</h1>\r\n                </div>      \r\n            );\r\n        }\r\n        let i = 1;\r\n        return (\r\n                <div className=\"container belowBody\">\r\n                  {\r\n                        data.map((movie)=>\r\n                            (i++%3 === 0)\r\n                            ? <div key={Math.random()} className=\"row\"> \r\n                                <ListItem  key={movie.id+Math.random()*10} movieData={movie}/>\r\n                                </div>\r\n                            : <ListItem  key={movie.id+Math.random()*10} movieData={movie} />\r\n                        )\r\n                  }\r\n                </div>  \r\n            );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        movieReducer: state.movieReducer\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Body);","class FetchData {\r\n\r\n  buildUrl(searchString, type = \"title\", sortBy = \"vote_average\") {\r\n    let url = \"http://react-cdp-api.herokuapp.com/movies?sortBy=\" + sortBy +\r\n              \"&search=\" + searchString +\r\n              \"&sortOrder=desc\" +\r\n              \"&searchBy=\" + type +\r\n              \"&limit=\" + 15;\r\n    return url;\r\n  }\r\n\r\n  getData(url) {\r\n    return new Promise(function (resolve, reject) {\r\n      var req = new XMLHttpRequest();\r\n      req.open('GET', url);\r\n      req.onload = function () {\r\n        if (req.status === 200) {\r\n          resolve(JSON.parse(req.response));\r\n        } else {\r\n          reject(Error(req.statusText));\r\n        }\r\n      };\r\n      req.onerror = function () {\r\n        reject(Error(\"Network Error\"));\r\n      };\r\n      req.send();\r\n    });\r\n\r\n  }\r\n}\r\n\r\nconst fetchData = new FetchData();\r\nexport default fetchData;","import React, { Component } from 'react';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../css/App.css';\r\nimport '../css/Header.css';\r\n\r\nimport fetchData from \"../utils/FetchData\"\r\nimport {addMovieToMovieData,clearMovieData,setDisplayMessage}  from \"../actions/action\"\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title:props.title,\r\n            value: '',\r\n            isByMovieName:true,\r\n            isByRating:true,\r\n            movieData : []\r\n          };\r\n          \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSearchByMovie = this.handleSearchByMovie.bind(this);\r\n        this.handleSearchByGenre = this.handleSearchByGenre.bind(this);\r\n        this.handleSortByRating = this.handleSortByRating.bind(this);\r\n        this.handleSortByReleaseDate = this.handleSortByReleaseDate.bind(this);\r\n        this.enterCheck = this.enterCheck.bind(this);\r\n    }\r\n\r\n    handleSearchByMovie(e) {\r\n      e.preventDefault();\r\n      this.setState({\r\n        isByMovieName: true\r\n      });\r\n    }\r\n\r\n    handleSearchByGenre(e) {\r\n      e.preventDefault();\r\n      this.setState({\r\n        isByMovieName: false\r\n      });\r\n    }\r\n\r\n    handleSortByRating(e) {\r\n      e.preventDefault();\r\n      this.setState({\r\n        isByRating: true\r\n      });\r\n    }\r\n\r\n    handleSortByReleaseDate(e) {\r\n      e.preventDefault();\r\n      this.setState({\r\n        isByRating: false\r\n      });\r\n    }\r\n\r\n    handleChange(event) {\r\n      this.setState({\r\n        value: event.target.value.toLowerCase()\r\n      });\r\n    }\r\n\r\n    \r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      this.props.clearMovieData();\r\n      this.setState({\r\n        movieData: []\r\n      });\r\n      if (this.state.value.length !== 0) {\r\n        this.props.setDisplayMessage(\"Searching...\")\r\n        let url = fetchData.buildUrl(this.state.value, this.state.isByMovieName ? 'title' : 'genres', this.state.isByRating ? 'vote_average' : 'release_date');\r\n        fetchData.getData(url)\r\n          .then(jsonData => jsonData.data)\r\n          .then(data => {(data.length === 0)?this.props.setDisplayMessage(\"No Movies Found\"):data.map(d => this.props.addMovieToMovieData(d))})\r\n      } else {\r\n        this.props.setDisplayMessage(\"Enter movie name...\")\r\n      }\r\n    }\r\n\r\n    enterCheck(event) {\r\n      if (event.keyCode === 13) {\r\n        document.getElementById('btnSearch').click();\r\n      }\r\n    }\r\n      \r\n    render() {\r\n          return(\r\n            <div className=\"TopContainer text-center \">\r\n            <div className=\"child-data\">\r\n                <form onSubmit={this.handleSubmit} >\r\n                <label>\r\n                <h2 className=\"siteHeader\">Find your Movie</h2>\r\n                <input className=\"form-control inputText\" type=\"text\" value={this.state.value} onChange={this.handleChange} \r\n                                    onKeyDown = {this.enterCheck}  placeholder={this.state.isByMovieName?'Enter Movie Name': \"Enter Genre\"}/>\r\n                </label>\r\n                <br/>\r\n                <button className={(this.state.isByMovieName)?'button-margin btn-danger':'button-margin '}  onClick={this.handleSearchByMovie}>Title</button> \r\n                <button className={(this.state.isByMovieName)?'button-margin ':'button-margin btn-danger'} onClick={this.handleSearchByGenre}>Genre</button>\r\n                <br/>\r\n                <button className={(this.state.isByRating)?'button-margin btn-danger':'button-margin '} onClick={this.handleSortByRating}>Rating</button> \r\n                <button className={(this.state.isByRating)?'button-margin':'button-margin btn-danger'} onClick={this.handleSortByReleaseDate}>Release Date</button>\r\n                <br/>\r\n                <div className=\"row\">\r\n                <div className=\"col-sm-4\"></div>\r\n                <div className=\"col-sm-4\"> <input className=\"button-margin form-control btn-danger\" type=\"submit\" value=\"Submit\" id=\"btnSearch\"/> </div>\r\n                <div className=\"col-sm-4\"></div>\r\n                \r\n                </div>\r\n                </form>\r\n                </div>\r\n                <p className=\"text-center text-white\">Top <span className=\"badge\">{this.props.movieReducer.totalNumberOfMoviesFound}</span> Movie(s) found</p>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    movieReducer:state.movieReducer\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({\r\n    addMovieToMovieData: addMovieToMovieData,\r\n    clearMovieData:clearMovieData,\r\n    setDisplayMessage:setDisplayMessage\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Search);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Body from \"./Body\"\r\nimport Search from './Search';\r\n\r\nimport '../css/App.css';\r\nimport '../css/Header.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App row \">    \r\n      <Search/>\r\n      <Body />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    movieReducer:state.movieReducer\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../css/ErrorPage.css';\r\nclass ErrorPage extends Component {\r\n    render() {\r\n        console.log(\"errors\")\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h1> 404! Page not Found... You can still Navigate to home </h1>\r\n                <Link to=\"/\"> <h3>Go Home </h3></Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPage;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    moviesData : [],\r\n    areMoviesFound : false,\r\n    showSearch : true,\r\n    movieBannerData : null,\r\n    totalNumberOfMoviesFound : 0,\r\n    displayMessage : \"Enter your movie\"\r\n};\r\n\r\nexport default initialState;","import {combineReducers} from 'redux';\r\nimport MovieReducer from  \"./movieReducer\"\r\n\r\nconst allReducers = combineReducers({\r\n    movieReducer: MovieReducer\r\n});\r\n\r\nexport default allReducers;","import ACTION from \"../actions/actionTypes\"\r\nimport initialState from \"../store/initialState\";\r\n\r\nexport default function(state = initialState,action) {\r\n    switch (action.type) {\r\n        case ACTION.ADD_MOVIE_TO_MOVIE_DATA : {\r\n            var moviesData = state.moviesData;\r\n            if(moviesData === null) {\r\n                moviesData = [];\r\n            }\r\n            moviesData.push(action.payload);\r\n            return {\r\n                moviesData:moviesData,\r\n                areMoviesFound:true,\r\n                showSearch : true,\r\n                movieBannerData : null,\r\n                totalNumberOfMoviesFound:state.moviesData.length,\r\n                displayMessage : \"Enter your movie\"\r\n            }\r\n        }\r\n\r\n        case ACTION.ADD_MOVIE_TO_MOVIE_DATA_GENRE : {\r\n            moviesData = state.moviesData;\r\n            if(moviesData === null) {\r\n                moviesData = [];\r\n            }\r\n            moviesData.push(action.payload);\r\n            return {\r\n                ...state,\r\n                moviesData:moviesData,\r\n                areMoviesFound:true,\r\n                showSearch : false,\r\n                totalNumberOfMoviesFound:state.moviesData.length,\r\n                displayMessage : \"Enter your movie\"\r\n            }\r\n        }\r\n        \r\n        case ACTION.CLEAR_MOVIE_DATA : {\r\n            return {\r\n                ...state,\r\n                moviesData:[],\r\n                areMoviesFound: false,\r\n                showSearch : true,\r\n                totalNumberOfMoviesFound:0,\r\n                displayMessage : \"Enter your movie\"\r\n            }\r\n        }\r\n\r\n        case ACTION.ADD_MOVIE_BANNER_DATA : {\r\n            return {\r\n                ...state,\r\n                areMoviesFound:true,\r\n                showSearch : false,\r\n                movieBannerData : action.payload,\r\n                totalNumberOfMoviesFound:state.moviesData.length,\r\n                displayMessage : \"Enter your movie\"\r\n            }    \r\n        }\r\n\r\n        case ACTION.SET_SEARCH : {\r\n            return {\r\n               ...state,\r\n               showSearch : action.payload\r\n            } \r\n        }\r\n\r\n        case ACTION.SET_DISPLAY_MESSAGE : {\r\n            return {\r\n                ...state,\r\n                displayMessage : action.payload\r\n             } \r\n        }\r\n        default: return state;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from \"redux\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../css/MovieBanner.css'\r\n\r\n\r\nimport history from '../utils/history';\r\nimport {clearMovieData} from \"../actions/action\"\r\n\r\n\r\nclass MovieBanner extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.showSearch = this.showSearch.bind(this);\r\n        this.convertMinsToHrsMins = this.convertMinsToHrsMins.bind(this);\r\n    }\r\n\r\n    showSearch() {\r\n        this.props.clearMovieData();\r\n        history.push(\"/\");\r\n    }\r\n\r\n\r\n    convertMinsToHrsMins(mins) {\r\n        let h = Math.floor(mins / 60);\r\n        let m = mins % 60;\r\n        h = h < 10 ? '0' + h : h;\r\n        m = m < 10 ? '0' + m : m;\r\n        return `${h}:${m}`;\r\n    }\r\n\r\n\r\n    isEmpty = (obj) => {\r\n        for(var key in obj) {\r\n            if(obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const individualMovieData = this.props.movieReducer.movieBannerData;\r\n        if(individualMovieData != null) {\r\n            if(!this.isEmpty(individualMovieData)) {\r\n                return(\r\n                    <div>\r\n                        <div className=\"row fullMovieBanner\">\r\n                        <div className=\"col-sm-2\"></div>\r\n                        <div className=\"col-sm-2\">\r\n                        <img src={individualMovieData.poster_path} alt={individualMovieData.title} className=\"movieBanner\" />\r\n                        <h3 className=\"text-white\">Movies with same genre: {individualMovieData.genres[0]}</h3>\r\n                        </div>               \r\n                        <div className=\"col-sm-8\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-1\"></div>\r\n\r\n                        <div className=\"col-sm-9\">\r\n                        <h1 className=\"text-red inline\">{individualMovieData.title+\"  \"}</h1>\r\n                        <h1 className=\"circle text-red inline\">{individualMovieData.vote_average}</h1>\r\n                        <div className=\"text-white\">\r\n                        <h3>{individualMovieData.tagline}</h3>\r\n                        <h3>{individualMovieData.release_date.split(\"-\")[0]}</h3>\r\n                        <h3>{this.convertMinsToHrsMins(individualMovieData.runtime)} hrs</h3>\r\n                        </div>\r\n                        <div className=\"row text-white\">\r\n                        <div className=\"col-sm-10\">\r\n                        <h4>{individualMovieData.overview}</h4>\r\n                        </div>\r\n                        <div className=\"col-sm-2\"></div>\r\n                        </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-sm-2\">\r\n                        <button onClick={()=>{this.showSearch()}} className=\"btn-danger form-control\">Search</button> </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </div> \r\n                );\r\n            } else {\r\n                return (\r\n                    <div className=\"text-center\">\r\n                        <h1> 404! Page not Found... You can still Navigate to home </h1>\r\n                        <Link to=\"/\"> <h3>Go Home </h3></Link>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <h1> Loading...Please Wait </h1>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    movieReducer:state.movieReducer\r\n  };\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        clearMovieData:clearMovieData\r\n    }, dispatch);\r\n  }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieBanner);","import React, { Component } from 'react';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport fetchData from \"../utils/FetchData\"\r\n\r\nimport Body from \"./Body\"\r\nimport MovieBanner from \"./MovieBanner\";\r\n\r\nimport '../css/App.css';\r\nimport '../css/Header.css';\r\n\r\nimport {addMovieBannerData,addMovieBannerDataGenre,clearMovieData,setDisplayMessage} from \"../actions/action\"\r\n\r\n\r\n\r\nclass DisplayMovieDetails extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {};\r\n    }\r\n    static getGenreData(genre, props) {\r\n      props.clearMovieData();\r\n      props.setDisplayMessage(\"Searching related genre Movies...\")\r\n      let url = fetchData.buildUrl(genre, \"genres\");\r\n      fetchData.getData(url)\r\n        .then(jsonData => jsonData.data)\r\n        .then(data => data.map(d => props.addMovieBannerDataGenre(d)))\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state=null) {\r\n      props.setDisplayMessage(\"Searching...\")\r\n      const url = 'http://react-cdp-api.herokuapp.com/movies/' + props.match.params.id\r\n      fetchData.getData(url)\r\n        .then(jsonData => {\r\n          props.addMovieBannerData(jsonData);\r\n          DisplayMovieDetails.getGenreData(jsonData.genres[0], props)\r\n        });\r\n      return state;\r\n    }\r\n\r\n    render() {\r\n          return (\r\n            <div className=\"App row \">    \r\n              <MovieBanner />\r\n              <Body/>\r\n            </div>\r\n          );\r\n        \r\n    }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({\r\n      addMovieBannerDataGenre: addMovieBannerDataGenre,\r\n      addMovieBannerData:addMovieBannerData,\r\n      clearMovieData:clearMovieData,\r\n      setDisplayMessage:setDisplayMessage\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(DisplayMovieDetails);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport ErrorPage from \"./components/ErrorPage\"\nimport * as serviceWorker from './serviceWorker';\nimport { Router, Route, Switch } from 'react-router-dom'\nimport history from \"./utils/history\"\nimport {createStore} from  'redux';\nimport {Provider} from 'react-redux';\nimport allReducers from \"./reducers/rootReducer\"\nimport DisplayMovieDetails from './components/DisplayMovieDetails';\n\nconsole.log(\"Search your Favorite Movie\")\n\nconst store = createStore(allReducers);\nReactDOM.render(<Provider store={store}>\n                    <Router history={history}>\n                        <Switch>\n                            <Route path=\"/displayMovieDetails/:id\" component={DisplayMovieDetails} />\n                            <Route exact path=\"/\" component={App} />\n                            <Route path=\"/*\" component={ErrorPage} />\n                        </Switch>\n                    </Router>\n                </Provider>,\n                document.getElementById('header'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}